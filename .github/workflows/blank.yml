name: Build MariaDB 10.3.33 (Windows Release)

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 720

    steps:
      - name: Checkout MariaDB source
        run: |
          git clone --branch mariadb-10.3.33 --depth 1 https://github.com/MariaDB/server.git mariadb
          cd mariadb
          git submodule update --init --recursive

      - name: Setup MSVC environment
        uses: ilammy/msvc-dev-cmd@v1

      - name: Install dependencies
        run: |
          choco install cmake --version=3.20.0 -y --allow-downgrade
          choco install ninja winflexbison3 -y
          choco install boost-msvc-14.3 -y

      - name: Patch for MSVC compatibility
        shell: pwsh
        run: |
          # 创建兼容头文件，使用更安全的检查
          $compatContent = @'
#pragma once

// 检查是否已经存在 binary_function 的定义
#if defined(_MSC_VER) && (!defined(_HAS_BINARY_FUNCTION) || _HAS_BINARY_FUNCTION)
#if !defined(_BINARY_FUNCTION_DEFINED) && !defined(_STL_BINARY_FUNCTION_DEFINED)

#include <functional>

// 只有在确实不存在时才定义
#ifndef _HAS_BINARY_FUNCTION
#define _HAS_BINARY_FUNCTION 1
#endif

#ifndef _BINARY_FUNCTION_DEFINED  
#define _BINARY_FUNCTION_DEFINED

namespace std {
  template <class Arg1, class Arg2, class Result>
  struct binary_function {
    typedef Arg1 first_argument_type;
    typedef Arg2 second_argument_type;
    typedef Result result_type;
  };
}

#endif // _BINARY_FUNCTION_DEFINED
#endif // MSVC check
#endif // _MSC_VER
'@
          Set-Content mariadb/include/my_stl_compat.h $compatContent

          # 在 ha_innodb.cc 顶部插入 include（如果还没有）
          $includeLine = '#include "my_stl_compat.h"'
          $filePath = "mariadb/storage/innobase/handler/ha_innodb.cc"
          $content = Get-Content $filePath
          
          # 检查是否已经包含
          $alreadyIncluded = $content | Where-Object { $_ -eq $includeLine }
          if (-not $alreadyIncluded) {
            # 插入到第一个 #include 之后
            $newContent = @()
            $foundFirstInclude = $false
            $inserted = $false
            
            foreach ($line in $content) {
              $newContent += $line
              if (-not $inserted -and $line -match '^#include\s+' -and -not $foundFirstInclude) {
                  $foundFirstInclude = $true
                  $newContent += $includeLine
                  $inserted = $true
              }
            }
            
            # 如果没有找到合适的插入位置，插入到文件开头
            if (-not $inserted) {
              $newContent = @($includeLine) + $content
            }
            
            Set-Content $filePath $newContent
          }

      - name: Configure CMake
        run: |
          cd mariadb
          cmake -G "Ninja" . -DCMAKE_BUILD_TYPE=Release -DWITH_SSL=bundled -DWITH_ZLIB=bundled -DWITHOUT_TOKUDB=1 -DWITHOUT_ROCKSDB=1 -DWITHOUT_OQGRAPH=1 -DWITH_UNIT_TESTS=0 -DWITH_EMBEDDED_SERVER=0 -DCMAKE_INSTALL_PREFIX=install -DBOOST_ROOT="C:/local/boost_1_81_0" -DCMAKE_CXX_STANDARD=14

      - name: Build
        run: |
          cd mariadb
          cmake --build . --config Release

      - name: Install
        run: |
          cd mariadb
          cmake --install . --prefix install

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: mariadb-windows-10.3.33-Release
          path: mariadb/install
